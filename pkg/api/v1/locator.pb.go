// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.4
// source: api/proto/v1/locator.proto

package __

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Unit int32

const (
	Unit_Meters     Unit = 0
	Unit_Kilometers Unit = 1
)

// Enum value maps for Unit.
var (
	Unit_name = map[int32]string{
		0: "Meters",
		1: "Kilometers",
	}
	Unit_value = map[string]int32{
		"Meters":     0,
		"Kilometers": 1,
	}
)

func (x Unit) Enum() *Unit {
	p := new(Unit)
	*p = x
	return p
}

func (x Unit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Unit) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_v1_locator_proto_enumTypes[0].Descriptor()
}

func (Unit) Type() protoreflect.EnumType {
	return &file_api_proto_v1_locator_proto_enumTypes[0]
}

func (x Unit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Unit.Descriptor instead.
func (Unit) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_v1_locator_proto_rawDescGZIP(), []int{0}
}

type CourierGpsPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId string    `protobuf:"bytes,1,opt,name=driverId,proto3" json:"driverId,omitempty"`
	Location *Location `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *CourierGpsPoint) Reset() {
	*x = CourierGpsPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_locator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourierGpsPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourierGpsPoint) ProtoMessage() {}

func (x *CourierGpsPoint) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_locator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourierGpsPoint.ProtoReflect.Descriptor instead.
func (*CourierGpsPoint) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_locator_proto_rawDescGZIP(), []int{0}
}

func (x *CourierGpsPoint) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

func (x *CourierGpsPoint) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_locator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_locator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_locator_proto_rawDescGZIP(), []int{1}
}

func (x *Location) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Location) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type FindNearbyCouriersQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target *Location `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Radius *Distance `protobuf:"bytes,2,opt,name=radius,proto3" json:"radius,omitempty"`
}

func (x *FindNearbyCouriersQuery) Reset() {
	*x = FindNearbyCouriersQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_locator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindNearbyCouriersQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNearbyCouriersQuery) ProtoMessage() {}

func (x *FindNearbyCouriersQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_locator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNearbyCouriersQuery.ProtoReflect.Descriptor instead.
func (*FindNearbyCouriersQuery) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_locator_proto_rawDescGZIP(), []int{2}
}

func (x *FindNearbyCouriersQuery) GetTarget() *Location {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *FindNearbyCouriersQuery) GetRadius() *Distance {
	if x != nil {
		return x.Radius
	}
	return nil
}

type Distance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount float64 `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Unit   Unit    `protobuf:"varint,2,opt,name=unit,proto3,enum=dlocator.Unit" json:"unit,omitempty"`
}

func (x *Distance) Reset() {
	*x = Distance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_locator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Distance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Distance) ProtoMessage() {}

func (x *Distance) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_locator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Distance.ProtoReflect.Descriptor instead.
func (*Distance) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_locator_proto_rawDescGZIP(), []int{3}
}

func (x *Distance) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Distance) GetUnit() Unit {
	if x != nil {
		return x.Unit
	}
	return Unit_Meters
}

type CourierList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Points *CourierGpsPoint `protobuf:"bytes,1,opt,name=points,proto3" json:"points,omitempty"`
}

func (x *CourierList) Reset() {
	*x = CourierList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_locator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourierList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourierList) ProtoMessage() {}

func (x *CourierList) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_locator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourierList.ProtoReflect.Descriptor instead.
func (*CourierList) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_locator_proto_rawDescGZIP(), []int{4}
}

func (x *CourierList) GetPoints() *CourierGpsPoint {
	if x != nil {
		return x.Points
	}
	return nil
}

var File_api_proto_v1_locator_proto protoreflect.FileDescriptor

var file_api_proto_v1_locator_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x64, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x5d, 0x0a, 0x0f, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x47, 0x70,
	0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x44, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x71, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64,
	0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12,
	0x2a, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x64, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x22, 0x46, 0x0a, 0x08, 0x44,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x22, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x64, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x04, 0x75,
	0x6e, 0x69, 0x74, 0x22, 0x40, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x47, 0x70, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2a, 0x22, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x0a, 0x0a,
	0x06, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4b, 0x69, 0x6c,
	0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x10, 0x01, 0x32, 0xa6, 0x01, 0x0a, 0x0e, 0x43, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x44, 0x0a, 0x0d,
	0x50, 0x75, 0x73, 0x68, 0x47, 0x70, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x2e,
	0x64, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72,
	0x47, 0x70, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x28, 0x01, 0x12, 0x4e, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79,
	0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x12, 0x21, 0x2e, 0x64, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x43, 0x6f,
	0x75, 0x72, 0x69, 0x65, 0x72, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x15, 0x2e, 0x64, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x69, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_v1_locator_proto_rawDescOnce sync.Once
	file_api_proto_v1_locator_proto_rawDescData = file_api_proto_v1_locator_proto_rawDesc
)

func file_api_proto_v1_locator_proto_rawDescGZIP() []byte {
	file_api_proto_v1_locator_proto_rawDescOnce.Do(func() {
		file_api_proto_v1_locator_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_v1_locator_proto_rawDescData)
	})
	return file_api_proto_v1_locator_proto_rawDescData
}

var file_api_proto_v1_locator_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_proto_v1_locator_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_proto_v1_locator_proto_goTypes = []interface{}{
	(Unit)(0),                       // 0: dlocator.Unit
	(*CourierGpsPoint)(nil),         // 1: dlocator.CourierGpsPoint
	(*Location)(nil),                // 2: dlocator.Location
	(*FindNearbyCouriersQuery)(nil), // 3: dlocator.FindNearbyCouriersQuery
	(*Distance)(nil),                // 4: dlocator.Distance
	(*CourierList)(nil),             // 5: dlocator.CourierList
	(*empty.Empty)(nil),             // 6: google.protobuf.Empty
}
var file_api_proto_v1_locator_proto_depIdxs = []int32{
	2, // 0: dlocator.CourierGpsPoint.location:type_name -> dlocator.Location
	2, // 1: dlocator.FindNearbyCouriersQuery.target:type_name -> dlocator.Location
	4, // 2: dlocator.FindNearbyCouriersQuery.radius:type_name -> dlocator.Distance
	0, // 3: dlocator.Distance.unit:type_name -> dlocator.Unit
	1, // 4: dlocator.CourierList.points:type_name -> dlocator.CourierGpsPoint
	1, // 5: dlocator.CourierLocator.PushGpsPoints:input_type -> dlocator.CourierGpsPoint
	3, // 6: dlocator.CourierLocator.FindNearbyCouriers:input_type -> dlocator.FindNearbyCouriersQuery
	6, // 7: dlocator.CourierLocator.PushGpsPoints:output_type -> google.protobuf.Empty
	5, // 8: dlocator.CourierLocator.FindNearbyCouriers:output_type -> dlocator.CourierList
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_api_proto_v1_locator_proto_init() }
func file_api_proto_v1_locator_proto_init() {
	if File_api_proto_v1_locator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_v1_locator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourierGpsPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_locator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_locator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindNearbyCouriersQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_locator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Distance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_locator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourierList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_v1_locator_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_v1_locator_proto_goTypes,
		DependencyIndexes: file_api_proto_v1_locator_proto_depIdxs,
		EnumInfos:         file_api_proto_v1_locator_proto_enumTypes,
		MessageInfos:      file_api_proto_v1_locator_proto_msgTypes,
	}.Build()
	File_api_proto_v1_locator_proto = out.File
	file_api_proto_v1_locator_proto_rawDesc = nil
	file_api_proto_v1_locator_proto_goTypes = nil
	file_api_proto_v1_locator_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CourierLocatorClient is the client API for CourierLocator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CourierLocatorClient interface {
	// use this procedure to push the latest locations of drivers.
	// guarantees to return an ack message for each location push but not in the same order.
	PushGpsPoints(ctx context.Context, opts ...grpc.CallOption) (CourierLocator_PushGpsPointsClient, error)
	// use this procedure to find all the drivers within radius of a given point.
	// there obviously are some limits on the radius.
	FindNearbyCouriers(ctx context.Context, in *FindNearbyCouriersQuery, opts ...grpc.CallOption) (*CourierList, error)
}

type courierLocatorClient struct {
	cc grpc.ClientConnInterface
}

func NewCourierLocatorClient(cc grpc.ClientConnInterface) CourierLocatorClient {
	return &courierLocatorClient{cc}
}

func (c *courierLocatorClient) PushGpsPoints(ctx context.Context, opts ...grpc.CallOption) (CourierLocator_PushGpsPointsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CourierLocator_serviceDesc.Streams[0], "/dlocator.CourierLocator/PushGpsPoints", opts...)
	if err != nil {
		return nil, err
	}
	x := &courierLocatorPushGpsPointsClient{stream}
	return x, nil
}

type CourierLocator_PushGpsPointsClient interface {
	Send(*CourierGpsPoint) error
	CloseAndRecv() (*empty.Empty, error)
	grpc.ClientStream
}

type courierLocatorPushGpsPointsClient struct {
	grpc.ClientStream
}

func (x *courierLocatorPushGpsPointsClient) Send(m *CourierGpsPoint) error {
	return x.ClientStream.SendMsg(m)
}

func (x *courierLocatorPushGpsPointsClient) CloseAndRecv() (*empty.Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *courierLocatorClient) FindNearbyCouriers(ctx context.Context, in *FindNearbyCouriersQuery, opts ...grpc.CallOption) (*CourierList, error) {
	out := new(CourierList)
	err := c.cc.Invoke(ctx, "/dlocator.CourierLocator/FindNearbyCouriers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CourierLocatorServer is the server API for CourierLocator service.
type CourierLocatorServer interface {
	// use this procedure to push the latest locations of drivers.
	// guarantees to return an ack message for each location push but not in the same order.
	PushGpsPoints(CourierLocator_PushGpsPointsServer) error
	// use this procedure to find all the drivers within radius of a given point.
	// there obviously are some limits on the radius.
	FindNearbyCouriers(context.Context, *FindNearbyCouriersQuery) (*CourierList, error)
}

// UnimplementedCourierLocatorServer can be embedded to have forward compatible implementations.
type UnimplementedCourierLocatorServer struct {
}

func (*UnimplementedCourierLocatorServer) PushGpsPoints(CourierLocator_PushGpsPointsServer) error {
	return status.Errorf(codes.Unimplemented, "method PushGpsPoints not implemented")
}
func (*UnimplementedCourierLocatorServer) FindNearbyCouriers(context.Context, *FindNearbyCouriersQuery) (*CourierList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindNearbyCouriers not implemented")
}

func RegisterCourierLocatorServer(s *grpc.Server, srv CourierLocatorServer) {
	s.RegisterService(&_CourierLocator_serviceDesc, srv)
}

func _CourierLocator_PushGpsPoints_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CourierLocatorServer).PushGpsPoints(&courierLocatorPushGpsPointsServer{stream})
}

type CourierLocator_PushGpsPointsServer interface {
	SendAndClose(*empty.Empty) error
	Recv() (*CourierGpsPoint, error)
	grpc.ServerStream
}

type courierLocatorPushGpsPointsServer struct {
	grpc.ServerStream
}

func (x *courierLocatorPushGpsPointsServer) SendAndClose(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *courierLocatorPushGpsPointsServer) Recv() (*CourierGpsPoint, error) {
	m := new(CourierGpsPoint)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CourierLocator_FindNearbyCouriers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindNearbyCouriersQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CourierLocatorServer).FindNearbyCouriers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dlocator.CourierLocator/FindNearbyCouriers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CourierLocatorServer).FindNearbyCouriers(ctx, req.(*FindNearbyCouriersQuery))
	}
	return interceptor(ctx, in, info, handler)
}

var _CourierLocator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dlocator.CourierLocator",
	HandlerType: (*CourierLocatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindNearbyCouriers",
			Handler:    _CourierLocator_FindNearbyCouriers_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PushGpsPoints",
			Handler:       _CourierLocator_PushGpsPoints_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "api/proto/v1/locator.proto",
}
